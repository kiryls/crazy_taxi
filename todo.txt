- anche le sources fanno REPORT

- distinguo i taxi che hanno mai accettato viaggi da quelli che non lo erano
    se on_duty == 1 allora il taxi ha accettato richiesta ma e' stato abortito
    prima. quindi viaggio fallito.

- tolgo i semafori di accesso alle pipes (perche' molto prob non servono)
    (li trasformo in semafori per incrementare il traffico delle celle)

- taxi/source/timer hanno exit status differenti

- i taxi devono usare un semaforo per incrementare il traffico storico nelle celle 
    (vedi piu' in alto)

- i taxi chiudono la pipe delle richieste (R) dopo che hanno accettato e sono partiti

- aggiungo alla generazione dei taxi anche la shm del Ledger

- memento dei taxi (personal record & simulation record)

- funzione update_ledger dei taxi

- ??? altro ???

#############################################################################
- tutti i taxi e il master devono fare detach dalla shared var START 
- (((rivedo le malloc per array args (in source.c:131))))
- deallocazione, detach delle strutture dati
- TEST_ERROR deve stare dentro i rispettivi if!!!
- verifico che tutti i processi abbiano fatto detach e close pipe
- pensiamo ad un posto migliore per la generazione delle pipe 
        e nella chiusura dei file descriptor per il master

template descrizione metodo:
/* 
################################################################################################# 
                                            TITOLO
                                         descrizione
################################################################################################# 
*/