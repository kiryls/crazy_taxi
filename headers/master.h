#ifndef _MASTER
#define _MASTER

Config*     config;
FILE*       settings;
char**      args;
pid_t       child_gpid;
pid_t       timer_id;

/* 
################################################################################################# 
                                          LOAD & UNLOAD
descrizione
################################################################################################# 
*/
int     load ();
void    unload ();

/* 
################################################################################################# 
                                              INITS
descrizione
################################################################################################# 
*/
void    init_world();
void    gen_holes();

/* 
################################################################################################# 
                                            PROCESSES
descrizione
################################################################################################# 
*/
void    gen_timer();
void    gen_sources ();
void    gen_taxi ();
int     gen_one_taxi (int i, int j);
void    respawn ();

/* 
################################################################################################# 
                                          SIMULATION
descrizione
################################################################################################# 
*/
void    simulate ();

/* 
################################################################################################# 
                                            SIGNALS
descrizione
################################################################################################# 
*/
void    set_signals();
void    print_map_handler(int sig);
void    wrap_up(int sig);

/* 
################################################################################################# 
                                            UTILITY
descrizione
################################################################################################# 
*/
int     check_hole(int x, int y);
void    select_tops();
int     is_top(int r, int c);
void    print_map();
void    aftermath();

#endif